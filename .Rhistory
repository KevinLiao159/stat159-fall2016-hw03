Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
setwd("~/Documents/stat159/stat159-fall2016-hw03")
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Output TV summary and histogram to eda-output.txt
sink(file = "data/eda-output.txt")
print("Summary of Statistics of TV")
summary(Advertising$TV)
sink()
# Save histogram of TV in PNG formats
hist(Advertising$TV)
dev.copy(png, 'images/histogram-tv.png')
dev.off()
# Output Radio summary and histogram to eda-output.txt
sink(file = "data/eda-output.txt")
print("Summary of Statistics of Radio")
summary(Advertising$Radio)
sink()
# Save histogram of Radio in PNG formats
hist(Advertising$Radio)
dev.copy(png, 'images/histogram-radio.png')
dev.off()
# Output Newspaper summary and histogram to eda-output.txt
sink(file = "data/eda-output.txt")
print("Summary of Statistics of Newspaper")
summary(Advertising$Radio)
sink()
# Save histogram of Newspaper in PNG formats
hist(Advertising$Newspaper)
dev.copy(png, 'images/histogram-newspaper.png')
dev.off()
# Output sales summary and histogram to eda-output
sink(file = "data/eda-output.txt", append = TRUE)
print("Summary of Statistics of Sales")
summary(Advertising$Sales)
sink()
# Save histogram of Sales in PNG formats
hist(Advertising$Sales)
dev.copy(png, 'images/histogram-sales.png')
dev.off()
install.packages("babynames")
library(babynames)
library(stringr)
install.packages("stringr")
library(stringr)
library(shiny)
install.packages("shiny")
library(shiny)
pairs(Advertising, col = "blue")
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Output summary statistics and correlation matrix to eda-output.txt
sink(file = "./data/eda-output.txt")
cat("Summary statistics for TV\n")
summary(Advertising$TV)
cat("Summary statistics for Radio\n")
summary(Advertising$Radio)
cat("Summary statistics for Newspaper\n")
summary(Advertising$Newspaper)
cat("Summary statistics for Sales\n")
summary(Advertising$Sales)
cat("Correlation matrix for advertising data\n")
cor(Advertising)
sink()
# Save histogram of TV in PNG formats
hist(Advertising$TV)
dev.copy(png, './images/histogram-tv.png')
dev.off()
# Save histogram of Radio in PNG formats
hist(Advertising$Radio)
dev.copy(png, './images/histogram-radio.png')
dev.off()
# Save histogram of Newspaper in PNG formats
hist(Advertising$Newspaper)
dev.copy(png, './images/histogram-newspaper.png')
dev.off()
# Save histogram of Sales in PNG formats
hist(Advertising$Sales)
dev.copy(png, './images/histogram-sales.png')
dev.off()
# Save scatterplot for correlation matrix
png(filename = "./images/scatterplot-matrix.png")
pairs(Advertising, col = "blue")
dev.off()
# Save correltaion matrix in binary format
corr_matrix = cor(Advertising)
save(corr_matrix, file = "./data/correlation-matrix.RData")
hist(Advertising$TV, main = "Historgram of TV")
hist(Advertising$TV, main = "Historgram of TV", xlab = "TV")
Advertising
View(Advertising)
Advertising <- Advertising[-1]
View(Advertising)
Advertising <- Advertising[,-1]
View(Advertising)
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Get rid of 1st column for linear model
Advertising <- Advertising[,-1]
View(Advertising)
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Get rid of 1st column for linear model
Advertising <- Advertising[,-1]
# Multiple Regression for TV, Radio and Newspaper against Sales
model <- lm(Sales ~ TV + Radio + Newspaper, data = Advertising)
png('./images/residual-plot.png')
plot(model, which = 1, main = "residual plot vs fitted")
dev.off()
plot(model, which = 1, main = "residual plot vs fitted")
plot(model, which = 1)
plot(model, which = 3, main = "Scale Location")
plot(model, which = 3)
plot(model, which = 2)
tv_model <- lm(Sales~TV, data = Advertising)
tv_summary <- summary(tv_model)
png('./images/scatterplot-tv-sales.png')
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
abline(tv_model, col = "red")
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
abline(tv_model, col = "red")
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
tv_model <- lm(Sales~TV, data = Advertising)
tv_summary <- summary(tv_model)
png('./images/scatterplot-tv-sales.png')
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
abline(tv_model, col = "red")
dev.off()
model <- lm(Sales ~ TV + Radio + Newspaper, data = Advertising)
model_summary <-summary(model)
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Get rid of 1st column for linear model
Advertising <- Advertising[,-1]
# Multiple Regression for TV, Radio and Newspaper against Sales
model <- lm(Sales ~ TV + Radio + Newspaper, data = Advertising)
model_summary <-summary(model)
#residual plot
png('./images/residual-plot.png')
plot(model, which = 1)
dev.off()
#scale location plot
png('./images/scale-location-plot.png')
plot(model, which = 3)
dev.off()
#Normal QQ
png('./images/normal-qq-plot.png')
plot(model, which = 2)
dev.off()
#TV
tv_model <- lm(Sales~TV, data = Advertising)
tv_summary <- summary(tv_model)
png('./images/scatterplot-tv-sales.png')
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
abline(tv_model, col = "red")
dev.off()
#Radio
radio_model <- lm(Sales~Radio, data = Advertising)
radio_summary <- summary(radio_model)
png('./images/scatterplot-radio-sales.png')
plot(x = Advertising$Radio, y = Advertising$Sales, xlab = "Radio", ylab ="Sales", main = "Radio vs Sales")
abline(radio_model, col = "red")
dev.off()
#Newspaper
news_model <-lm(Sales~Newspaper, data = Advertising)
news_summary <- summary(news_model)
png('./images/scatterplot-newspaper-sales.png')
plot(x = Advertising$Newspaper, y = Advertising$Sales, xlab = "Newspaper", ylab ="Sales", main = "Newspaper vs Sales")
abline(news_model, col = "red")
dev.off()
#save in regression binary data
save(model, model_summary, tv_model, tv_summary, radio_model, radio_summary, news_model, news_summary, file = "./data/regression.RData")
'ggplot'
sessionInfo()
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Output session-info-script.txt
sink(file = "./session-info.txt")
# To avoid unnecessary warnings on the terminal
options(warn = -1)
library(ggplot2)
'ggplot'
library(testthat)
'testthat'
library(rmarkdown)
'rmarkdown'
library(xtable)
'xtable'
library(stats)
'stats'
library(graphics)
'graphics'
library(grDevices)
'grDevices'
library(utils)
'utils'
library(datasets)
'datasets'
library(methods)
'methods'
library(base)
'base'
sessionInfo()
sink()
ResSumSq <- function(lm) {
RSS = sum(lm$residuals^2)
return(RSS)
}
model
summary(model)
ResSumSq <- function(lm) {
RSS = sum(lm$residuals^2)
return(RSS)
}
ResSumSq(model)
model$residuals
model$model
sum((unlist(model$model[1]) - mean(unlist(model$model[1])))^2)
coefficients(model)
length(summary(model)$residuals)
mtcars
head(mtcars)
setwd("~/Documents/stat159/stat159-fall2016-hw03")
library(testthat)
# loading all function files
files <- list.files("functions")
for (i in 1:length(files)) {
source(paste0("code/functions/", files[i]))
}
# run unit tests in folder 'tests/'
test_dir("code/tests", reporter = "Summary")
files <- list.files("functions")
for (i in 1:length(files)) {
source(paste0("code/functions/", files[i]))
}
files <- list.files("code/functions")
for (i in 1:length(files)) {
source(paste0("code/functions/", files[i]))
}
setwd("~/Documents/stat159/stat159-fall2016-hw03")
library(testthat)
# loading all function files
files <- list.files("code/functions")
for (i in 1:length(files)) {
source(paste0("code/functions/", files[i]))
}
# run unit tests in folder 'tests/'
test_dir("code/tests", reporter = "Summary")
library(xtable)
library(png)
library(grid)
load('../data/regression.RData')
load('../data/correlation-matrix.RData')
Advertising <- read.csv("../data/Advertising.csv")
source("../code/functions/regression-functions.R")
setwd("~/Documents/stat159/stat159-fall2016-hw03")
install.packages("png")
install.packages("grid")
library(grid)
library(xtable)
r
library(png)
load('./data/regression.RData')
load('./data/correlation-matrix.RData')
Advertising <- read.csv("./data/Advertising.csv")
source("./code/functions/regression-functions.R")
View(corr_matrix)
tv = xtable(tv_summary$coefficients, caption = "TV Advertisement Linear Regression")
print(tv, comment=FALSE, type = "latex")
tv = xtable(tv_model$coefficients, caption = 'Simple Linear Regression on TV and Sales')
print(tv, comment=FALSE, type = "latex", caption.placement = 'top')
tv = xtable(tv_model$coefficients, caption = 'Simple Linear Regression on TV and Sales')
print(tv, comment=FALSE, type = "tex", caption.placement = 'top')
tv = xtable(tv_model$coefficients, caption = 'Simple Linear Regression on TV and Sales')
tv = xtable(tv_summary$coefficients, caption = 'Simple Linear Regression on TV and Sales')
tv
# Setting working directory
setwd("~/Documents/stat159/stat159-fall2016-hw03")
# Read Advertising data into R
Advertising <- read.csv(file = "data/Advertising.csv", header = TRUE)
# Get rid of 1st column for linear model
Advertising <- Advertising[,-1]
# Multiple Regression for TV, Radio and Newspaper against Sales
model <- lm(Sales ~ TV + Radio + Newspaper, data = Advertising)
model_summary <-summary(model)
#residual plot
png('./images/residual-plot.png')
plot(model, which = 1)
dev.off()
#scale location plot
png('./images/scale-location-plot.png')
plot(model, which = 3)
dev.off()
#Normal QQ
png('./images/normal-qq-plot.png')
plot(model, which = 2)
dev.off()
#TV
tv_model <- lm(Sales~TV, data = Advertising)
tv_summary <- summary(tv_model)
png('./images/scatterplot-tv-sales.png')
plot(x = Advertising$TV, y = Advertising$Sales, xlab = "TV", ylab ="Sales", main = "TV vs Sales")
abline(tv_model, col = "red")
dev.off()
#Radio
radio_model <- lm(Sales~Radio, data = Advertising)
radio_summary <- summary(radio_model)
png('./images/scatterplot-radio-sales.png')
plot(x = Advertising$Radio, y = Advertising$Sales, xlab = "Radio", ylab ="Sales", main = "Radio vs Sales")
abline(radio_model, col = "red")
dev.off()
#Newspaper
news_model <-lm(Sales~Newspaper, data = Advertising)
news_summary <- summary(news_model)
png('./images/scatterplot-newspaper-sales.png')
plot(x = Advertising$Newspaper, y = Advertising$Sales, xlab = "Newspaper",
ylab ="Sales", main = "Newspaper vs Sales")
abline(news_model, col = "red")
dev.off()
#save in regression binary data
save(model, model_summary, tv_model, tv_summary, radio_model,
radio_summary, news_model, news_summary, file = "data/regression.RData")
tv_summary
load('data/regression.RData')
load('data/regression.RData')
tv_summary
library(xtable)
library(png)
library(grid)
load('data/regression.RData')
load('data/correlation-matrix.RData')
Advertising <- read.csv("data/Advertising.csv")
source("code/functions/regression-functions.R")
library(xtable)
library(png)
library(grid)
load('data/regression.RData')
load('data/correlation-matrix.RData')
Advertising <- read.csv("data/Advertising.csv")
source("code/functions/regression-functions.R")
tv_summary
tv = xtable(tv_summary$coefficients, caption = 'Simple Linear Regression on TV and Sales')
print(tv, comment=FALSE, type = "latex", caption.placement = 'top')
install.packages("xtable")
library(xtable)
corr = xtable(cor_m, caption = "Correlations Matrix")
print(corr, comment=FALSE, type = "latex", caption.placement = 'top')
corr = xtable(cor_m, caption = "Correlations Matrix")
corr = xtable(corr_matrix, caption = "Correlations Matrix")
print(corr, comment=FALSE, type = "latex", caption.placement = 'top')
img <- readPNG("../images/scatterplot-matrix.png")
grid.raster(img)
library(png)
library(grid)
img <- readPNG("../images/scatterplot-matrix.png")
grid.raster(img)
img <- readPNG("images/scatterplot-matrix.png")
grid.raster(img)
source('code/functions/regression-functions.R')
RSE = residual_std_error(model)
R_square = r_squared(model)
f_statistic = f_statistic(model)
df = data.frame(Quantity= c("Residual Standard Error", "R-squared",
"F-statistic"), Value = c(RSE, R_square,
f_statistic))
print(xtable(df, caption = 'Regression Quality Indices'),
comment = FALSE, caption.placement = 'top')
img <- readPNG("images/scatterplot-matrix.png")
grid.raster(img)
